{"version":3,"sources":["firebase.js","comonents/LinkForm.js","comonents/Link.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinkForm","props","useState","url","name","description","values","setValue","handleChange","e","target","value","onEdit","id","a","collection","doc","get","data","useEffect","console","log","currentID","className","onSubmit","preventDefault","addTask","type","placeholder","onChange","rows","Link","link","setLinks","setCurrentID","linkObjet","set","toast","update","error","getLinks","onSnapshot","querySnapshot","docs","forEach","push","onDelete","window","confirm","delete","autoClose","map","onClick","href","ulr","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d609c555.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport  'firebase/firestore'\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAM8-iE9pkQjEAcMk9p-Hwow_DulxbjmzI\",\r\n    authDomain: \"fb-crud-react-d571e.firebaseapp.com\",\r\n    projectId: \"fb-crud-react-d571e\",\r\n    storageBucket: \"fb-crud-react-d571e.appspot.com\",\r\n    messagingSenderId: \"1007869489559\",\r\n    appId: \"1:1007869489559:web:8327df370c4c4549fb54d2\"\r\n  };\r\n  // Initialize Firebase\r\n const fb = firebase.initializeApp(firebaseConfig);\r\n export const db = fb.firestore()","import React, {useState, useEffect} from 'react';\r\nimport { db } from '../firebase';\r\n\r\nconst LinkForm =(props)=>{\r\n    const [values, setValue]= useState({\r\n        url:'',\r\n        name:'',\r\n        description:''\r\n    })\r\n    const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    props.addTask(values)\r\n    setValue({url:'',\r\n    name:'',\r\n    description:''})\r\n    }\r\n    const handleChange=(e)=>{\r\n       const {name, value}= e.target\r\n       setValue({...values, [name]:value})\r\n    }\r\n    const onEdit = async (id) => {\r\n        const doc = await db.collection(\"links\").doc(id).get();\r\n        setValue({ ...doc.data() });\r\n      };\r\n      useEffect(() => {\r\n          console.log('aca', props.currentID);\r\n        if (props.currentID === \"\") {\r\n          setValue({ url:'',\r\n          name:'',\r\n          description:'' });\r\n        } else {\r\n          onEdit(props.currentID);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [props.currentID]);\r\n    return(\r\n        <>\r\n        <form className= ' card card-body' onSubmit={handleSubmit}>\r\n            <div className='form-group input-group'>\r\n                <div className='input-group-text bg-light'>\r\n                <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                    <input\r\n                    name='url'\r\n                    type='text'\r\n                    className='form-control'\r\n                    placeholder='http://someurl.com'\r\n                    onChange={handleChange}\r\n                    value={values.url}>\r\n                    \r\n                    </input>\r\n                \r\n            </div>\r\n            <div className='form-group input-group'>\r\n                <div className='input-group-text bg-light'>\r\n                <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    name='name'\r\n                    placeholder='web side name'\r\n                    onChange={handleChange}\r\n                    value={values.name}>\r\n                    </input>\r\n            </div>\r\n            <div className='form-group input-group'>\r\n                <textarea name= 'description' rows='3' className='form-control'\r\n                onChange={handleChange}\r\n                value={values.description}>\r\n\r\n                </textarea>\r\n            </div>\r\n            <button className='btn btn-primary btn-block'>\r\n                Guardar\r\n            </button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\nexport default LinkForm ","import React,{useEffect, useState} from 'react';\r\nimport LinkForm from './LinkForm';\r\nimport { db } from '../firebase';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Link =()=>{\r\n    const [link, setLinks]= useState([])\r\n    const [currentID, setCurrentID]=useState('')\r\n    const addTask=async(linkObjet)=>{\r\n        try {\r\n            if (currentID === \"\") {\r\n              await db.collection(\"links\").doc().set(linkObjet);\r\n              toast(\"New Link Added\", {\r\n                type: \"success\",\r\n              });\r\n            } else {\r\n              await db.collection(\"links\").doc(currentID).update(linkObjet);\r\n              toast(\"Link Updated Successfully\", {\r\n                type: \"info\",\r\n              });\r\n              setCurrentID(\"\");\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n    const getLinks = async()=>{\r\n        const querySnapshot=  db.collection('links').onSnapshot((querySnapshot)=>{\r\n            const docs =[]\r\n            querySnapshot.forEach( doc=>{\r\n            docs.push({...doc.data(),id:doc.id})\r\n            })\r\n            setLinks(docs)\r\n        })\r\n        \r\n    }\r\n    const onDelete = async (id)=>{\r\n        if(window.confirm('seguro?')){\r\n            db.collection('links').doc(id).delete()\r\n            toast('Se a eleminado de manera correcta',{\r\n                type:'error',\r\n                autoClose:2000\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(()=>{\r\n        getLinks()},[])\r\n    return(\r\n        <>\r\n        <div className='col-md-4 p-2'>\r\n        <LinkForm {...{addTask,currentID,link}}/>\r\n        </div>\r\n      \r\n        <div className='col-md-8 p-2'>\r\n            {link.map(link=>(\r\n                <div className='card mb-1' key={link.id}>\r\n                    <div className='card-body'>\r\n                        \r\n                        <div className=' d-flex justify-content-between'> \r\n                        <h4>{link.name}</h4>\r\n                        <div>\r\n                        <i className=\"material-icons text-danger\" onClick={()=>{onDelete(link.id)}}>close</i>\r\n                        <i className=\"material-icons\"onClick={()=>setCurrentID(link.id)}>create </i>\r\n                        </div>\r\n                        </div>\r\n                        <p>{link.description}</p>\r\n                        <a href={link.ulr} target='_blank' rel=\"noreferrer\">Go web site</a>\r\n                    </div>\r\n                    \r\n                </div>\r\n            ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Link ","import Link from './comonents/Link';\nimport { ToastContainer } from 'react-toastify';\nimport  'react-toastify/dist/ReactToastify.css';\n\n\nconst App=()=> {\n  return (\n    <div className= 'container p-4'>\n      <div className= 'row'>\n      <Link/>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './firebase'\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}